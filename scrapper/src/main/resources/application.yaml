app:
  bot:
    url: ${BOT_URL:http://localhost:8080}
  github:
    github-token: ${GITHUB_TOKEN} # env variable
    github-base-url: ${GITHUB_URL:https://api.github.com/repos}
  stackoverflow:
    key: ${SO_TOKEN_KEY}
    access-token: ${SO_ACCESS_TOKEN}
    so-base-url: ${SO_URL:https://api.stackexchange.com/2.3}
  access-type: ${ACCESS_TYPE:SQL}
  updates-checker:
    batch-size: ${CHECKER_BATCH_SIZE:200}
    threads-count: ${THREADS_COUNT:4}
    check-interval-seconds: ${CHECK_INTERVAL:0}
  updates-sender:
    batch-size: ${SENDER_BATCH_SIZE:200}
  kafka:
    topic: updates
    partitions: 1
    replicas: 1
    tx-id: ${TRANSACTIONAL_ID}
  transport: kafka
  retry:
    max-attempts: 3
    backoff: 500
  rate-limit:
    limit: 600 #10 в секунду
    refresh-period-seconds: 60

spring:
  application:
    name: Scrapper
  liquibase:
    enabled: false
  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
  config:
    import: optional:.env.properties
  mvc:
    log-resolved-exception: false
  datasource:
    url: ${POSTGRES_URL}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      properties:
        acks: -1
        batch.size: 1024
        linger.ms: 10000

logging:
  structured:
    format:
      file: ecs
  file:
    name: scrapper-log.json

server:
  port: 8081

springdoc:
  swagger-ui:
    enabled: true
    path: /swagger-ui

resilience4j:
  circuitbreaker:
    instances:
      external-services:
        ignore-exceptions:
          - backend.academy.shared.exceptions.NotRetryApiCallException
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 80
        permitted-number-of-calls-in-half-open-state: 4
        wait-duration-in-open-state: 5000ms
