app:
  telegram:
    token: ${TELEGRAM_TOKEN} # env variable
  scrapper:
    url: ${SCRAPPER_URL:http://localhost:8081}
  redis:
    ttl-minutes: ${REDIS_TTL_MINUTES:60}
  kafka:
    topic: updates
    dltTopic: updates-dlt
  transport: kafka
  retry:
    max-attempts: 3
    backoff: 500
  timeout:
    connection: 200
    read: 6000

spring:
  application:
    name: Bot
  liquibase:
    enabled: false
  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
  config:
    import: optional:.env.properties
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      properties:
        enable.auto.commit: false
        auto.offset.reset: earliest
        isolation.level: read_committed
        fetch.min.bytes: 1024
        fetch.max.bytes: 1048576
        fetch.max.wait.ms: 10000
        max.poll.interval.ms: 10000
        max.poll.records: 10

logging:
  structured:
    format:
      file: ecs
  file:
    name: tg-bot-log.json

server:
  port: 8080

springdoc:
  swagger-ui:
    enabled: true
    path: /swagger-ui

resilience4j:
  circuitbreaker:
    instances:
      scrapper:
        ignore-exceptions:
          - backend.academy.shared.exceptions.NotRetryApiCallException
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 80
        permitted-number-of-calls-in-half-open-state: 4
        wait-duration-in-open-state: 5000ms
